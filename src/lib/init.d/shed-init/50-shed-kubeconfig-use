#!/bin/bash

shed-kubeconfig-use() {
    if [[ $# -ne 1 ]]; then
        echo "Usage: shed-kubeconfig-use kubeconfig-number"
        echo
        echo "  kubeconfig-number: 0|1|2|3|4"
        return
    fi

    local KUBECONFIG_NUMBER
    KUBECONFIG_NUMBER=$1

    if [[ $KUBECONFIG_NUMBER != '0' ]] &&
        [[ $KUBECONFIG_NUMBER != '1' ]] &&
        [[ $KUBECONFIG_NUMBER != '2' ]] &&
        [[ $KUBECONFIG_NUMBER != '3' ]] &&
        [[ $KUBECONFIG_NUMBER != '4' ]]; then
        echo "Invalid KubeConfig Number. (found: ${KUBECONFIG_NUMBER})."
        echo
        echo "  kubeconfig-number: 0|1|2|3|4"
        return
    fi

    if [[ -z $(shed-value ".kubeconfig[$KUBECONFIG_NUMBER].context") ]]; then
        echo "KubeConfig Number [$KUBECONFIG_NUMBER] is not setup." >&2
        return
    fi

    export SHED_KUBECONFIG_NUMBER=$KUBECONFIG_NUMBER

    SHED_CONTEXT_USE_SYSTEM_INIT_DIRECTORY=/usr/lib/shed/init.d/shed-kubeconfig-use/

    if [[ -d $SHED_CONTEXT_USE_SYSTEM_INIT_DIRECTORY ]]; then
        for f1 in $(find "$SHED_CONTEXT_USE_SYSTEM_INIT_DIRECTORY" -type f | sort); do
            # shellcheck source=/dev/null
            source "$f1"
        done
    fi
    SHED_CONTEXT_USE_USER_INIT_DIRECTORY=$SHED_CONFIG_HOME/init.d/shed-kubeconfig-use/

    if [[ -d $SHED_CONTEXT_USE_USER_INIT_DIRECTORY ]]; then
        for f1 in $(find "$SHED_CONTEXT_USE_USER_INIT_DIRECTORY" -type f | sort); do
            # shellcheck source=/dev/null
            source "$f1"
        done
    fi
}

alias c0='shed-kubeconfig-use 0'
alias c1='shed-kubeconfig-use 1'
alias c2='shed-kubeconfig-use 2'
alias c3='shed-kubeconfig-use 3'
alias c4='shed-kubeconfig-use 4'
alias sc='shed-contexts'
