#!/bin/bash

create_file="N"
print_to_screen="Y"

usage() {
  echo "Usage: $(basename "$0") [-h] [-f] secretName"
  echo "  -f  create local file structure"
}
while getopts "hf" arg; do
  case $arg in
  h)
    usage
    exit 0
    ;;
  f)
    create_file="Y"
    print_to_screen="N"
    ;;
  *)
    usage
    exit 1
    ;;
  esac
done
shift $((OPTIND - 1))

if [[ $# -ne 1 ]]; then
  usage
  exit 0
fi

readonly secretName=$1
secretData=$(shed-kubectl get secrets/"$secretName" -o yaml)

if [[ -z $secretData ]]; then
  echo.red "Secret not found!"
  exit 1
fi

readarray -t variables < <(echo "$secretData" | yq -r -o=j -I=0 '.data|keys|.[]' 2>/dev/null)

if [[ ${#variables[@]} == 0 ]]; then
  exit 2
fi
if is-true "$create_file"; then
  mkdir -p "$secretName"
fi

for variable in "${variables[@]}"; do
  query=$(printf '.data."%s" // ""' "$variable")
  value=$(echo "$secretData" | yq "$query" - | base64 -d)
  if is-true "$create_file"; then
    echo "$value" >"$secretName/$variable"
    echo "$secretName/$variable created."
  fi
  if is-true "$print_to_screen"; then
    echo.blue "[$variable]"
    echo "$value"
    echo ""
  fi
done
